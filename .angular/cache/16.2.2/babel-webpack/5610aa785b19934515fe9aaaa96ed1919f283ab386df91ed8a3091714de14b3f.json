{"ast":null,"code":"export class SeatsComponent {\n  constructor(seatService) {\n    this.seatService = seatService;\n    this.lowerSingleSeats = []; // Initialize with an empty array or default value\n    this.singleUpperBerthSeats = []; // Initialize with an empty array or default value\n    this.doubleLowerBerthSeats = []; // Initialize with an empty array or default value\n    this.doubleUpperBerthSeats = []; // Initialize with an empty array or default value\n  } // Inject the service\n  ngOnInit() {\n    const seatData = this.seatService.getSeatData(); // Get the seat data from the service\n    console.log(seatData);\n    for (const seatName in seatData) {\n      if (seatData.hasOwnProperty(seatName)) {\n        const seat = seatData[seatName];\n        if (seatName.startsWith('LS')) {\n          this.lowerSingleSeats.push({\n            name: seatName,\n            ...seat\n          });\n        } else if (seatName.startsWith('SUB')) {\n          this.singleUpperBerthSeats.push({\n            name: seatName,\n            ...seat\n          });\n        } else if (seatName.startsWith('DLB')) {\n          this.doubleLowerBerthSeats.push({\n            name: seatName,\n            ...seat\n          });\n        } else if (seatName.startsWith('DUB')) {\n          this.doubleUpperBerthSeats.push({\n            name: seatName,\n            ...seat\n          });\n        }\n      }\n    }\n    // Sort the arrays by seat name numerically\n    this.lowerSingleSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    this.singleUpperBerthSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    this.doubleLowerBerthSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    this.doubleUpperBerthSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    setTimeout(() => {}, 800);\n    console.log(this.lowerSingleSeats); // Array of lower single seats\n    console.log(this.singleUpperBerthSeats); // Array of single upper berth seats\n    console.log(this.doubleLowerBerthSeats); // Array of double lower berth seats\n    console.log(this.doubleUpperBerthSeats);\n  }\n  // const seatData = ti\n  toggleSeatStatus(seat) {\n    if (seat.seatStatus === 'available' || seat.seatStatus === 'selected') {\n      seat.seatStatus = 'selected';\n    } else if (seat.seatStatus !== 'booked') {\n      seat.seatStatus = 'selected';\n    }\n  }\n}\n/*\nlowerSingleSeats = this.generateSeats(12, 'available');\nsingleUpperBerthSeats = this.generateSUBerth(6, 'available');\ndoubleLowerBerthSeats = this.generateDUBerth(6, 'available');\ndoubleUpperBerthSeats = this.generateDLBerth(6, 'available');\n\n// Function to generate seat objects\nprivate generateSeats(count: number, status: string): any[] {\n  const seats = [];\n  for (let i = 1; i <= count; i++) {\n    seats.push({ name: `LS${i}`, status: status });\n  }\n  return seats;\n}\n\nprivate generateSUBerth(count: number, status: string): any[] {\n  const SUberth = [];\n  for (let i = 1; i <= count; i++) {\n    SUberth.push({ name: `SUB${i}`, status: status });\n  }\n  return SUberth;\n}\nprivate generateDUBerth(count: number, status: string): any[] {\n  const DUberth = [];\n  for (let i = 1; i <= count; i++) {\n    DUberth.push({ name: `DUB${i}`, status: status });\n  }\n  return DUberth;\n}\nprivate generateDLBerth(count: number, status: string): any[] {\n  const DLberth = [];\n  for (let i = 1; i <= count; i++) {\n    DLberth.push({ name: `DLB${i}`, status: status });\n  }\n  return DLberth;\n}\n\n// Function to toggle seat status\ntoggleSeatStatus(seat: any) {\n  if (seat.status === 'available' || seat.status === 'selected') {\n    seat.status = 'booked';\n  } else if (seat.status !== 'booked') {\n    seat.status = 'selected';\n  }\n}\n\n}\n\n\n\n\n*/","map":{"version":3,"names":["SeatsComponent","constructor","seatService","lowerSingleSeats","singleUpperBerthSeats","doubleLowerBerthSeats","doubleUpperBerthSeats","ngOnInit","seatData","getSeatData","console","log","seatName","hasOwnProperty","seat","startsWith","push","name","sort","a","b","aNumber","parseInt","match","bNumber","setTimeout","toggleSeatStatus","seatStatus"],"sources":["C:\\Users\\91908\\OneDrive\\Desktop\\Documents\\idp\\Angular\\AcademyProject\\src\\app\\seats\\seats.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { SeatService } from '../seat.service';\r\n\r\n@Component({\r\n  selector: 'app-seats',\r\n  templateUrl: './seats.component.html',\r\n  styleUrls: ['./seats.component.css']\r\n})\r\n\r\nexport interface Seat {\r\n  name: string;\r\n  seatStatus: 'available' | 'selected' | 'booked';\r\n  passengerName?: string;\r\n  passengerAge?: number;\r\n  passengerGender?: string;\r\n}\r\n\r\n  \r\nexport class SeatsComponent {\r\n\r\n  constructor(private seatService: SeatService) {} // Inject the service\r\n\r\n  lowerSingleSeats: any[] = []; // Initialize with an empty array or default value\r\n  singleUpperBerthSeats: any[] = []; // Initialize with an empty array or default value\r\n  doubleLowerBerthSeats: any[] = []; // Initialize with an empty array or default value\r\n  doubleUpperBerthSeats: any[] = []; // Initialize with an empty array or default value\r\n\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    const seatData = this.seatService.getSeatData(); // Get the seat data from the service\r\n    console.log(seatData);\r\n\r\n    for (const seatName in seatData) {\r\n      if (seatData.hasOwnProperty(seatName)) {\r\n        const seat = seatData[seatName];\r\n  \r\n        if (seatName.startsWith('LS')) {\r\n          this.lowerSingleSeats.push({ name: seatName, ...seat });\r\n        } else if (seatName.startsWith('SUB')) {\r\n          this.singleUpperBerthSeats.push({ name: seatName, ...seat });\r\n        } else if (seatName.startsWith('DLB')) {\r\n          this.doubleLowerBerthSeats.push({ name: seatName, ...seat });\r\n        } else if (seatName.startsWith('DUB')) {\r\n          this.doubleUpperBerthSeats.push({ name: seatName, ...seat });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sort the arrays by seat name numerically\r\nthis.lowerSingleSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\nthis.singleUpperBerthSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\nthis.doubleLowerBerthSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\nthis.doubleUpperBerthSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\n    setTimeout(() => {\r\n\r\n    }, 800);  \r\n\r\n    console.log(this.lowerSingleSeats); // Array of lower single seats\r\n    console.log(this.singleUpperBerthSeats); // Array of single upper berth seats\r\n    console.log(this.doubleLowerBerthSeats); // Array of double lower berth seats\r\n    console.log(this.doubleUpperBerthSeats);\r\n\r\n  }\r\n    // const seatData = ti\r\n    \r\n  toggleSeatStatus(seat: any) {\r\n    if (seat.seatStatus === 'available' || seat.seatStatus === 'selected') {\r\n      seat.seatStatus = 'selected';\r\n    } else if (seat.seatStatus !== 'booked') {\r\n      seat.seatStatus = 'selected';\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n  /*\r\n  lowerSingleSeats = this.generateSeats(12, 'available');\r\n  singleUpperBerthSeats = this.generateSUBerth(6, 'available');\r\n  doubleLowerBerthSeats = this.generateDUBerth(6, 'available');\r\n  doubleUpperBerthSeats = this.generateDLBerth(6, 'available');\r\n\r\n  // Function to generate seat objects\r\n  private generateSeats(count: number, status: string): any[] {\r\n    const seats = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      seats.push({ name: `LS${i}`, status: status });\r\n    }\r\n    return seats;\r\n  }\r\n  \r\n  private generateSUBerth(count: number, status: string): any[] {\r\n    const SUberth = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      SUberth.push({ name: `SUB${i}`, status: status });\r\n    }\r\n    return SUberth;\r\n  }\r\n  private generateDUBerth(count: number, status: string): any[] {\r\n    const DUberth = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      DUberth.push({ name: `DUB${i}`, status: status });\r\n    }\r\n    return DUberth;\r\n  }\r\n  private generateDLBerth(count: number, status: string): any[] {\r\n    const DLberth = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      DLberth.push({ name: `DLB${i}`, status: status });\r\n    }\r\n    return DLberth;\r\n  }\r\n\r\n  // Function to toggle seat status\r\n  toggleSeatStatus(seat: any) {\r\n    if (seat.status === 'available' || seat.status === 'selected') {\r\n      seat.status = 'booked';\r\n    } else if (seat.status !== 'booked') {\r\n      seat.status = 'selected';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}