{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nexport let SignUpComponent = class SignUpComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.criteria = {\n      lowerCaseMet: false,\n      upperCaseMet: false,\n      digitMet: false,\n      specialCharMet: false,\n      lengthMet: false\n    };\n  }\n  matchConfirmPassword(control) {\n    if (control.value !== this.signUp.get('password').value) {\n      return {\n        passwordMismatch: true\n      };\n    }\n    return null;\n  }\n  checkPasswordCriteria() {\n    const passwordControl = this.signUp.get('password');\n    if (passwordControl) {\n      const passwordValue = passwordControl.value;\n      this.criteria.lowerCaseMet = /[a-z]/.test(passwordValue);\n      this.criteria.upperCaseMet = /[A-Z]/.test(passwordValue);\n      this.criteria.digitMet = /\\d/.test(passwordValue);\n      this.criteria.specialCharMet = /[@#$%^&+=!]/.test(passwordValue);\n      this.criteria.lengthMet = passwordValue.length >= 8;\n    }\n  }\n  ngOnInit() {\n    this.signUp = new FormGroup({\n      username: new FormControl(null, [Validators.email, Validators.required, Validators.minLength(7), Validators.maxLength(37)]),\n      password: new FormControl(null, [Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!])[a-zA-Z0-9@#$%^&+=!]{8,}$'), Validators.required]),\n      confirmpassword: new FormControl(null)\n    });\n    this.signUp.get('confirmpassword').setValidators([Validators.required, this.matchConfirmPassword.bind(this)]);\n  }\n  onSubmit() {\n    if (this.signUp.valid) {\n      const email = this.signUp.value.username;\n      const password = this.signUp.value.password;\n      this.authService.signUp(email, password).subscribe(resData => {\n        // console.log(resData); \n        this.router.navigate(['/']);\n      }, error => {\n        this.errorMessage = error;\n        this.signUp.reset();\n      });\n    }\n  }\n};\nSignUpComponent = __decorate([Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})], SignUpComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","Validators","SignUpComponent","constructor","router","authService","errorMessage","criteria","lowerCaseMet","upperCaseMet","digitMet","specialCharMet","lengthMet","matchConfirmPassword","control","value","signUp","get","passwordMismatch","checkPasswordCriteria","passwordControl","passwordValue","test","length","ngOnInit","username","email","required","minLength","maxLength","password","pattern","confirmpassword","setValidators","bind","onSubmit","valid","subscribe","resData","navigate","error","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Web\\academy-project\\src\\app\\modules\\login\\sign-up\\sign-up.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent {\r\n  constructor(private router: Router,private authService: AuthService){}\r\n  signUp!: FormGroup;\r\n  errorMessage =''\r\n  criteria = {\r\n    lowerCaseMet: false,\r\n    upperCaseMet: false,\r\n    digitMet: false,\r\n    specialCharMet: false,\r\n    lengthMet: false,\r\n  };\r\n\r\n  matchConfirmPassword(control: FormControl): { [s: string]: boolean } {\r\n    if (control.value !== this.signUp.get('password').value) {\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  checkPasswordCriteria() {\r\n    const passwordControl = this.signUp.get('password');\r\n\r\n    if (passwordControl) {\r\n      const passwordValue = passwordControl.value;\r\n\r\n      this.criteria.lowerCaseMet = /[a-z]/.test(passwordValue);\r\n      this.criteria.upperCaseMet = /[A-Z]/.test(passwordValue);\r\n      this.criteria.digitMet = /\\d/.test(passwordValue);\r\n      this.criteria.specialCharMet = /[@#$%^&+=!]/.test(passwordValue);\r\n      this.criteria.lengthMet = passwordValue.length >= 8;\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  ngOnInit(){\r\n  this.signUp = new FormGroup({\r\n    username: new FormControl(null,[Validators.email,Validators.required,Validators.minLength(7),Validators.maxLength(37)]),\r\n    password: new FormControl(null,[Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!])[a-zA-Z0-9@#$%^&+=!]{8,}$'),Validators.required]),\r\n    confirmpassword: new FormControl(null)\r\n  });\r\n\r\n  this.signUp\r\n      .get('confirmpassword')\r\n      .setValidators([\r\n        Validators.required,\r\n        this.matchConfirmPassword.bind(this),\r\n      ]);\r\n\r\n}\r\nonSubmit() {\r\n  if(this.signUp.valid){\r\n    const email = this.signUp.value.username;\r\n      const password = this.signUp.value.password;\r\n\r\n      this.authService.signUp(email, password).subscribe(resData => {\r\n        // console.log(resData); \r\n        this.router.navigate(['/']);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n        this.signUp.reset();\r\n\r\n      }\r\n      );\r\n  }\r\n}\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}