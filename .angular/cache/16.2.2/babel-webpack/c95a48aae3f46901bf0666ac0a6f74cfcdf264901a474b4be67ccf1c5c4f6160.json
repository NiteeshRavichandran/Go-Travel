{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SeatsComponent = class SeatsComponent {\n  constructor(seatService, bookingService) {\n    this.seatService = seatService;\n    this.bookingService = bookingService;\n    this.lowerSingleSeats = [];\n    this.singleUpperBerthSeats = [];\n    this.doubleLowerBerthSeats = [];\n    this.doubleUpperBerthSeats = [];\n    // const seatData = ti\n    this.selectedSeats = [];\n    this.passengerName = '';\n    this.passengerAge = 0;\n    this.passengerGender = '';\n  }\n  ngOnInit() {\n    const seatData = this.seatService.getSeatData();\n    console.log(seatData);\n    for (const seatName in seatData) {\n      if (seatData.hasOwnProperty(seatName)) {\n        const seat = seatData[seatName];\n        if (seatName.startsWith('LS')) {\n          this.lowerSingleSeats.push({\n            name: seatName,\n            ...seat\n          });\n        } else if (seatName.startsWith('SUB')) {\n          this.singleUpperBerthSeats.push({\n            name: seatName,\n            ...seat\n          });\n        } else if (seatName.startsWith('DLB')) {\n          this.doubleLowerBerthSeats.push({\n            name: seatName,\n            ...seat\n          });\n        } else if (seatName.startsWith('DUB')) {\n          this.doubleUpperBerthSeats.push({\n            name: seatName,\n            ...seat\n          });\n        }\n      }\n    }\n    // Sort the arrays by seat name numerically\n    this.lowerSingleSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    this.singleUpperBerthSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    this.doubleLowerBerthSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    this.doubleUpperBerthSeats.sort((a, b) => {\n      const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\n      const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\n      return aNumber - bNumber;\n    });\n    setTimeout(() => {}, 800);\n    console.log(this.lowerSingleSeats); // Array of lower single seats\n    console.log(this.singleUpperBerthSeats); // Array of single upper berth seats\n    console.log(this.doubleLowerBerthSeats); // Array of double lower berth seats\n    console.log(this.doubleUpperBerthSeats);\n  }\n  toggleSeatStatus(seat) {\n    if (seat.seatStatus === 'Available' && this.selectedSeats.length < 5) {\n      seat.seatStatus = 'selected';\n      this.selectedSeats.push(seat);\n    } else if (seat.seatStatus !== 'selected') {\n      seat.seatStatus = 'Available';\n      const index = this.selectedSeats.findIndex(s => s.name === seat.name);\n      if (index !== -1) {\n        this.selectedSeats.splice(index, 1);\n      }\n    }\n  }\n  getSeatClass(seat) {\n    return {\n      'booked': seat.seatStatus === 'booked',\n      'available': seat.seatStatus === 'Available',\n      'selected': seat.seatStatus === 'selected',\n      'ladies': seat.seatStatus === 'ladies'\n    };\n  }\n  bookSelectedSeats() {\n    if (this.selectedSeats.length === 0) {\n      return;\n    }\n    this.bookingService.bookSeats(this.selectedSeats);\n  }\n};\nSeatsComponent = __decorate([Component({\n  selector: 'app-seats',\n  templateUrl: './seats.component.html',\n  styleUrls: ['./seats.component.css']\n})], SeatsComponent);\n// toggleSeatStatus(seat: Seat) {\n//   if (seat.seatStatus === 'Available' && this.selectedSeats.length < 5 ) {\n//     seat.seatStatus = 'selected';\n//     this.selectedSeats.push(seat);\n//   } else if (seat.seatStatus === 'selected') {\n//     seat.seatStatus = 'Available';\n//     const index = this.selectedSeats.findIndex((s) => s.name === seat.name);\n//     if (index !== -1) {\n//       this.selectedSeats.splice(index, 1);\n//     }\n//   }\n// }\n/*\nlowerSingleSeats = this.generateSeats(12, 'available');\nsingleUpperBerthSeats = this.generateSUBerth(6, 'available');\ndoubleLowerBerthSeats = this.generateDUBerth(6, 'available');\ndoubleUpperBerthSeats = this.generateDLBerth(6, 'available');\n\n// Function to generate seat objects\nprivate generateSeats(count: number, status: string): any[] {\n  const seats = [];\n  for (let i = 1; i <= count; i++) {\n    seats.push({ name: `LS${i}`, status: status });\n  }\n  return seats;\n}\n\nprivate generateSUBerth(count: number, status: string): any[] {\n  const SUberth = [];\n  for (let i = 1; i <= count; i++) {\n    SUberth.push({ name: `SUB${i}`, status: status });\n  }\n  return SUberth;\n}\nprivate generateDUBerth(count: number, status: string): any[] {\n  const DUberth = [];\n  for (let i = 1; i <= count; i++) {\n    DUberth.push({ name: `DUB${i}`, status: status });\n  }\n  return DUberth;\n}\nprivate generateDLBerth(count: number, status: string): any[] {\n  const DLberth = [];\n  for (let i = 1; i <= count; i++) {\n    DLberth.push({ name: `DLB${i}`, status: status });\n  }\n  return DLberth;\n}\n\n// Function to toggle seat status\ntoggleSeatStatus(seat: any) {\n  if (seat.status === 'available' || seat.status === 'selected') {\n    seat.status = 'booked';\n  } else if (seat.status !== 'booked') {\n    seat.status = 'selected';\n  }\n}\n\n}\n\n\n\n\n*/","map":{"version":3,"names":["Component","SeatsComponent","constructor","seatService","bookingService","lowerSingleSeats","singleUpperBerthSeats","doubleLowerBerthSeats","doubleUpperBerthSeats","selectedSeats","passengerName","passengerAge","passengerGender","ngOnInit","seatData","getSeatData","console","log","seatName","hasOwnProperty","seat","startsWith","push","name","sort","a","b","aNumber","parseInt","match","bNumber","setTimeout","toggleSeatStatus","seatStatus","length","index","findIndex","s","splice","getSeatClass","bookSelectedSeats","bookSeats","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\91908\\OneDrive\\Desktop\\Documents\\idp\\Angular\\AcademyProject\\src\\app\\seats\\seats.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { SeatService } from '../seat.service';\r\n\r\nexport interface Seat {\r\n  name: string;\r\n  seatStatus: 'Available' | 'selected' | 'booked' | 'ladies';\r\n  passengerName?: string;\r\n  passengerAge?: number;\r\n  passengerGender?: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-seats',\r\n  templateUrl: './seats.component.html',\r\n  styleUrls: ['./seats.component.css']\r\n})\r\n\r\n\r\n  \r\nexport class SeatsComponent {\r\n\r\n  constructor(private seatService: SeatService, private bookingService: Booking) {} \r\n\r\n  lowerSingleSeats: any[] = []; \r\n  singleUpperBerthSeats: any[] = []; \r\n  doubleLowerBerthSeats: any[] = []; \r\n  doubleUpperBerthSeats: any[] = []; \r\n\r\n  \r\n  \r\n  ngOnInit(): void {\r\n    const seatData = this.seatService.getSeatData(); \r\n    console.log(seatData);\r\n\r\n    for (const seatName in seatData) {\r\n      if (seatData.hasOwnProperty(seatName)) {\r\n        const seat = seatData[seatName];\r\n  \r\n        if (seatName.startsWith('LS')) {\r\n          this.lowerSingleSeats.push({ name: seatName, ...seat });\r\n        } else if (seatName.startsWith('SUB')) {\r\n          this.singleUpperBerthSeats.push({ name: seatName, ...seat });\r\n        } else if (seatName.startsWith('DLB')) {\r\n          this.doubleLowerBerthSeats.push({ name: seatName, ...seat });\r\n        } else if (seatName.startsWith('DUB')) {\r\n          this.doubleUpperBerthSeats.push({ name: seatName, ...seat });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sort the arrays by seat name numerically\r\nthis.lowerSingleSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\nthis.singleUpperBerthSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\nthis.doubleLowerBerthSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\nthis.doubleUpperBerthSeats.sort((a, b) => {\r\n  const aNumber = parseInt(a.name.match(/\\d+/)[0], 10);\r\n  const bNumber = parseInt(b.name.match(/\\d+/)[0], 10);\r\n  return aNumber - bNumber;\r\n});\r\n\r\n    setTimeout(() => {\r\n\r\n    }, 800);  \r\n\r\n    console.log(this.lowerSingleSeats); // Array of lower single seats\r\n    console.log(this.singleUpperBerthSeats); // Array of single upper berth seats\r\n    console.log(this.doubleLowerBerthSeats); // Array of double lower berth seats\r\n    console.log(this.doubleUpperBerthSeats);\r\n\r\n  }\r\n    // const seatData = ti\r\n    selectedSeats: Seat[] = [];\r\n    passengerName: string = '';\r\n    passengerAge: number = 0;\r\n    passengerGender: string = '';\r\n  \r\n    \r\n    toggleSeatStatus(seat: any) {\r\n      if (seat.seatStatus === 'Available' && this.selectedSeats.length < 5) {\r\n        seat.seatStatus = 'selected';\r\n        this.selectedSeats.push(seat);\r\n      } else if (seat.seatStatus !== 'selected') {\r\n        seat.seatStatus = 'Available';\r\n        const index = this.selectedSeats.findIndex((s) => s.name === seat.name);\r\n        if (index !== -1) {\r\n          this.selectedSeats.splice(index, 1);\r\n        }\r\n      } \r\n    }\r\n\r\n    \r\n    getSeatClass(seat: Seat) {\r\n      return {\r\n        'booked': seat.seatStatus === 'booked',\r\n        'available': seat.seatStatus === 'Available',\r\n        'selected': seat.seatStatus === 'selected',\r\n        'ladies': seat.seatStatus === 'ladies',\r\n      };\r\n    }\r\n\r\n    bookSelectedSeats() {\r\n      if (this.selectedSeats.length === 0) {\r\n        return;\r\n      }\r\n      this.bookingService.bookSeats(this.selectedSeats);\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n  \r\n  // toggleSeatStatus(seat: Seat) {\r\n  //   if (seat.seatStatus === 'Available' && this.selectedSeats.length < 5 ) {\r\n  //     seat.seatStatus = 'selected';\r\n  //     this.selectedSeats.push(seat);\r\n  //   } else if (seat.seatStatus === 'selected') {\r\n  //     seat.seatStatus = 'Available';\r\n  //     const index = this.selectedSeats.findIndex((s) => s.name === seat.name);\r\n  //     if (index !== -1) {\r\n  //       this.selectedSeats.splice(index, 1);\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  /*\r\n  lowerSingleSeats = this.generateSeats(12, 'available');\r\n  singleUpperBerthSeats = this.generateSUBerth(6, 'available');\r\n  doubleLowerBerthSeats = this.generateDUBerth(6, 'available');\r\n  doubleUpperBerthSeats = this.generateDLBerth(6, 'available');\r\n\r\n  // Function to generate seat objects\r\n  private generateSeats(count: number, status: string): any[] {\r\n    const seats = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      seats.push({ name: `LS${i}`, status: status });\r\n    }\r\n    return seats;\r\n  }\r\n  \r\n  private generateSUBerth(count: number, status: string): any[] {\r\n    const SUberth = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      SUberth.push({ name: `SUB${i}`, status: status });\r\n    }\r\n    return SUberth;\r\n  }\r\n  private generateDUBerth(count: number, status: string): any[] {\r\n    const DUberth = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      DUberth.push({ name: `DUB${i}`, status: status });\r\n    }\r\n    return DUberth;\r\n  }\r\n  private generateDLBerth(count: number, status: string): any[] {\r\n    const DLberth = [];\r\n    for (let i = 1; i <= count; i++) {\r\n      DLberth.push({ name: `DLB${i}`, status: status });\r\n    }\r\n    return DLberth;\r\n  }\r\n\r\n  // Function to toggle seat status\r\n  toggleSeatStatus(seat: any) {\r\n    if (seat.status === 'available' || seat.status === 'selected') {\r\n      seat.status = 'booked';\r\n    } else if (seat.status !== 'booked') {\r\n      seat.status = 'selected';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}