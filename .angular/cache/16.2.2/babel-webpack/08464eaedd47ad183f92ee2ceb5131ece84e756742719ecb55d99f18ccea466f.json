{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Please Enter a valid UserName!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Please Enter a valid Password!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AdminComponent {\n  constructor(router) {\n    this.router = router;\n  }\n  ngOnInit() {\n    this.adminLogin = new FormGroup({\n      username: new FormControl(null, [Validators.minLength(9), Validators.required]),\n      password: new FormControl(null, [Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=!])(?=.*[a-zA-Z0-9@#$%^&+=!]).{8,}'), Validators.required])\n    });\n  }\n  onSubmit() {\n    console.log(this.adminLogin);\n  }\n}\n_class = AdminComponent;\n_class.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"submit\"], [1, \"login-form\"], [1, \"navbar\", \"navbar-expand\", \"navbar-light\", \"bg-light\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [1, \"nav-link\"], [\"routerLink\", \"/signup\", 1, \"nav-link\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn-container\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"help-block\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function AdminComponent_Template_form_submit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"nav\", 2)(4, \"ul\", 3)(5, \"li\", 4)(6, \"a\", 5);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 5);\n      i0.ɵɵtext(10, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"li\", 4)(12, \"a\", 6);\n      i0.ɵɵtext(13, \"Admin\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 8);\n      i0.ɵɵtext(16, \"Admin Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵtemplate(18, AdminComponent_span_18_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 12);\n      i0.ɵɵtemplate(23, AdminComponent_span_23_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 13)(25, \"button\", 14);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.adminLogin);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngIf\", !((tmp_1_0 = ctx.adminLogin.get(\"username\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.adminLogin.get(\"username\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx.adminLogin.get(\"password\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.adminLogin.get(\"password\")) == null ? null : tmp_2_0.touched));\n    }\n  },\n  dependencies: [i2.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AdminComponent","constructor","router","ngOnInit","adminLogin","username","minLength","required","password","pattern","onSubmit","console","log","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","ɵɵlistener","AdminComponent_Template_form_submit_1_listener","ɵɵelement","ɵɵtemplate","AdminComponent_span_18_Template","AdminComponent_span_23_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","valid","touched","tmp_2_0"],"sources":["E:\\Web\\Angular\\academy-project\\src\\app\\admin\\admin.component.ts","E:\\Web\\Angular\\academy-project\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  constructor(private router: Router){}\n  adminLogin!: FormGroup;\n\n  ngOnInit(){\n  this.adminLogin = new FormGroup({\n    username: new FormControl(null,[Validators.minLength(9),Validators.required]),\n    password: new FormControl(null,[Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=!])(?=.*[a-zA-Z0-9@#$%^&+=!]).{8,}'),Validators.required])\n  });\n}\nonSubmit() {\n  console.log(this.adminLogin);\n}\n\n}\n","<div>\n  <form [formGroup]=\"adminLogin\" (submit)=\"onSubmit()\">\n    <div class=\"login-form\">\n      <nav class=\"navbar navbar-expand navbar-light bg-light\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" >Login</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" >Sign Up</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\">Admin</a>\n          </li>\n        </ul>\n      </nav>\n      <div class=\"form-group\">\n        <label for=\"username\">Admin Name</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          formControlName=\"username\"\n          class=\"form-control\"\n        />\n        <span\n          *ngIf=\"\n            !adminLogin.get('username')?.valid &&\n            adminLogin.get('username')?.touched\n          \"\n          class=\"help-block\"\n          >Please Enter a valid UserName!</span\n        >\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          formControlName=\"password\"\n          class=\"form-control\"\n        />\n        <span\n          *ngIf=\"\n            !adminLogin.get('password')?.valid &&\n            adminLogin.get('password')?.touched\n          \"\n          class=\"help-block\"\n          >Please Enter a valid Password!</span\n        >\n      </div>\n      <div class=\"btn-container\">\n        <button class=\"btn btn-dark\" type=\"submit\">Login</button>\n        <!-- <span \n     *ngIf=\"!loginForm?.valid && loginForm?.touched\"\n     class=\"help-block\">Please Enter valid Credentials!</span> -->\n      </div>\n    </div>\n  </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}