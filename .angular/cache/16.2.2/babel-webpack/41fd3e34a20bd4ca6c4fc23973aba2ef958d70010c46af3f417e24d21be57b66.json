{"ast":null,"code":"var _class;\nimport { take } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, router) {\n    return this.authService.user.pipe(take(1), map(user => {\n      const isAuth = !!user;\n      if (isAuth) {\n        return true;\n      }\n      return this.router.createUrlTree(['/login']);\n    })\n    // tap(isAuth => {\n    //   if (!isAuth) {\n    //     this.router.navigate(['/auth']);\n    //   }\n    // })\n    );\n  }\n}\n_class = AuthGuardService;\n_class.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["take","map","AuthGuardService","constructor","authService","router","canActivate","route","user","pipe","isAuth","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Web\\academy-project\\src\\app\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, take } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { map, tap} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'  \r\n})\r\nexport class AuthGuardService implements CanActivate{\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.authService.user.pipe(\r\n      take(1),\r\n      map(user => {\r\n        const isAuth = !!user;\r\n        if (isAuth) {\r\n          return true;\r\n        }\r\n        return this.router.createUrlTree(['/login']);\r\n      })\r\n      // tap(isAuth => {\r\n      //   if (!isAuth) {\r\n      //     this.router.navigate(['/auth']);\r\n      //   }\r\n      // })\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAAqBA,IAAI,QAAQ,MAAM;AAEvC,SAASC,GAAG,QAAY,gBAAgB;;;;AAKxC,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExEC,WAAWA,CAACC,KAA6B,EAAEF,MAA2B;IACpE,OAAO,IAAI,CAACD,WAAW,CAACI,IAAI,CAACC,IAAI,CAC/BT,IAAI,CAAC,CAAC,CAAC,EACPC,GAAG,CAACO,IAAI,IAAG;MACT,MAAME,MAAM,GAAG,CAAC,CAACF,IAAI;MACrB,IAAIE,MAAM,EAAE;QACV,OAAO,IAAI;;MAEb,OAAO,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IACD;IACA;IACA;IACA;IACA;KACD;EACH;;SApBWT,gBAAgB;;mBAAhBA,MAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAhBf,MAAgB;EAAAgB,OAAA,EAAhBhB,MAAgB,CAAAiB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}