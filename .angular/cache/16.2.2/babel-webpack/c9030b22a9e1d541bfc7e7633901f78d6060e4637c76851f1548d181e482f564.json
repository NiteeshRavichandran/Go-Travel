{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let BookTicketsComponent = class BookTicketsComponent {\n  constructor(bookingService, fb, http, seatService, router, authService) {\n    this.bookingService = bookingService;\n    this.fb = fb;\n    this.http = http;\n    this.seatService = seatService;\n    this.router = router;\n    this.authService = authService;\n    this.selectedSeats = [];\n    this.bookingForms = [];\n  }\n  ngOnInit() {\n    // Get the selected seats data directly from the service\n    this.selectedSeats = this.bookingService.getSelectedSeatsData();\n    this.initializeForms();\n  }\n  initializeForms() {\n    this.bookingForms = [];\n    function nameValidator(control) {\n      const name = control.value;\n      if (!name || name.length < 3) {\n        return {\n          'minLength': true\n        };\n      }\n      if (!/^[a-zA-Z\\s]*$/.test(name)) {\n        return {\n          'invalidChars': true\n        };\n      }\n      return null;\n    }\n    this.selectedSeats.forEach(seat => {\n      const isLadiesSeat = seat.seatStatus === 'ladiesSelected';\n      const form = this.fb.group({\n        passengerName: [seat.passengerName || '', [Validators.required, nameValidator]],\n        passengerAge: [seat.passengerAge || '', [Validators.required, Validators.min(5), Validators.max(125)]],\n        passengerGender: [{\n          value: 'female' || '',\n          disabled: isLadiesSeat\n        }, Validators.required]\n      });\n      this.bookingForms.push(form);\n    });\n  }\n  logout() {\n    this.authService.logout();\n  }\n  onSubmit() {\n    if (this.bookingForms.every(form => form.valid)) {\n      const passengerDataArray = this.bookingForms.map((form, index) => ({\n        seatName: this.selectedSeats[index].name,\n        seatPrice: this.selectedSeats[index].seatPrice,\n        passengerData: form.value\n      }));\n      // Send passengerDataArray to the server or perform any other required actions\n      // console.log(this.bookingForms);  \n      this.bookingService.confirmSeats(passengerDataArray);\n      this.router.navigate(['/summary']);\n    }\n  }\n};\nBookTicketsComponent = __decorate([Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.scss']\n})], BookTicketsComponent);","map":{"version":3,"names":["Component","Validators","BookTicketsComponent","constructor","bookingService","fb","http","seatService","router","authService","selectedSeats","bookingForms","ngOnInit","getSelectedSeatsData","initializeForms","nameValidator","control","name","value","length","test","forEach","seat","isLadiesSeat","seatStatus","form","group","passengerName","required","passengerAge","min","max","passengerGender","disabled","push","logout","onSubmit","every","valid","passengerDataArray","map","index","seatName","seatPrice","passengerData","confirmSeats","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Web\\academy-project\\src\\app\\book-tickets\\book-tickets.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BookingService } from '../booking.service';\r\nimport { SeatService } from '../seat.service';\r\nimport { Seat } from '../seats/seats.component';\r\n\r\n@Component({\r\n  selector: 'app-book-tickets',\r\n  templateUrl: './book-tickets.component.html',\r\n  styleUrls: ['./book-tickets.component.scss'],\r\n})\r\nexport class BookTicketsComponent implements OnInit {\r\n  selectedSeats: Seat[] = [];\r\n  bookingForms: FormGroup[] = [];\r\n  sst: string;\r\n\r\n  constructor(private bookingService: BookingService, private fb: FormBuilder, private http: HttpClient, private seatService: SeatService, private router: Router, private authService) {}\r\n\r\n  ngOnInit(): void {\r\n    // Get the selected seats data directly from the service\r\n    this.selectedSeats = this.bookingService.getSelectedSeatsData();\r\n    this.initializeForms();\r\n  }\r\n\r\n  initializeForms() {\r\n    this.bookingForms = [];\r\n\r\n    function nameValidator(control: AbstractControl): ValidationErrors | null {\r\n      const name = control.value;\r\n      if (!name || name.length < 3) {\r\n        return { 'minLength': true };\r\n      }\r\n      if (!/^[a-zA-Z\\s]*$/.test(name)) {\r\n        return { 'invalidChars': true };\r\n      }\r\n      return null;\r\n    }\r\n    this.selectedSeats.forEach((seat) => {\r\n\r\n      const isLadiesSeat = seat.seatStatus === 'ladiesSelected';\r\n      const form = this.fb.group({\r\n        passengerName: [seat.passengerName || '', [Validators.required, nameValidator]],\r\n        passengerAge: [seat.passengerAge || '', [Validators.required, Validators.min(5), Validators.max(125)]],\r\n        passengerGender: [{ value: 'female' || '', disabled: isLadiesSeat }, Validators.required],\r\n      });\r\n      this.bookingForms.push(form);\r\n    });\r\n  }\r\n\r\n  logout(){\r\n    this.authService.logout();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.bookingForms.every((form) => form.valid)) {\r\n      const passengerDataArray = this.bookingForms.map((form, index) => ({\r\n        seatName: this.selectedSeats[index].name,\r\n        seatPrice: this.selectedSeats[index].seatPrice,\r\n        passengerData: form.value,\r\n      }));\r\n\r\n      // Send passengerDataArray to the server or perform any other required actions\r\n      // console.log(this.bookingForms);  \r\n      this.bookingService.confirmSeats(passengerDataArray);\r\n      this.router.navigate(['/summary'])\r\n\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}