{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/auth/auth.service\";\nexport class SignUpComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.criteria = {\n      lowerCaseMet: false,\n      upperCaseMet: false,\n      digitMet: false,\n      specialCharMet: false,\n      lengthMet: false\n    };\n  }\n  // Custom validator to check if \"Confirm Password\" matches \"Password\"\n  matchConfirmPassword(control) {\n    if (control.value !== this.signUp.get('password').value) {\n      return {\n        passwordMismatch: true\n      };\n    }\n    return null;\n  }\n  // Function to check password criteria\n  checkPasswordCriteria() {\n    const passwordControl = this.signUp.get('password');\n    if (passwordControl) {\n      const passwordValue = passwordControl.value;\n      this.criteria.lowerCaseMet = /[a-z]/.test(passwordValue);\n      this.criteria.upperCaseMet = /[A-Z]/.test(passwordValue);\n      this.criteria.digitMet = /\\d/.test(passwordValue);\n      this.criteria.specialCharMet = /[@#$%^&+=!]/.test(passwordValue);\n      this.criteria.lengthMet = passwordValue.length >= 8;\n    }\n  }\n  // Function to handle form submission\n  onSubmit() {\n    if (this.signUp.valid) {\n      const email = this.signUp.value.username;\n      const password = this.signUp.value.password;\n      this.authService.signUp(email, password).subscribe(resData => {\n        // Successful signup\n        this.router.navigate(['/']);\n      }, error => {\n        // Handle signup error\n        this.errorMessage = error;\n        this.signUp.reset();\n      });\n    }\n  }\n  // Initialize the form in ngOnInit\n  ngOnInit() {\n    this.signUp = new FormGroup({\n      username: new FormControl(null, [Validators.email, Validators.required, Validators.minLength(7), Validators.maxLength(37)]),\n      password: new FormControl(null, [Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@#$%^&+=!])[a-zA-Z0-9@#$%^&+=!]{8,}$'), Validators.required]),\n      confirmpassword: new FormControl(null)\n    });\n    // Set custom validators for the \"confirmpassword\" control\n    this.signUp.get('confirmpassword').setValidators([Validators.required, this.matchConfirmPassword.bind(this)]);\n  }\n}\n_class = SignUpComponent;\n_class.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-sign-up\"]],\n  decls: 0,\n  vars: 0,\n  template: function SignUpComponent_Template(rf, ctx) {},\n  styles: [\".login-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100vh;\\n  background: linear-gradient(135deg, #ffffff 0%, #ffffff 100%);\\n  position: relative;\\n}\\n.login-container[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%] {\\n  font-size: 70px;\\n  font-weight: bold;\\n  font-family: \\\"Courier New\\\", Courier, monospace;\\n  letter-spacing: 10px;\\n  position: absolute;\\n  top: 80px;\\n  right: 800px;\\n}\\n.login-container[_ngcontent-%COMP%]   .desc[_ngcontent-%COMP%] {\\n  font-size: 34px;\\n  font-family: \\\"Aladin\\\", cursive;\\n  letter-spacing: 5px;\\n  position: absolute;\\n  top: 200px;\\n  right: 50px;\\n  text-align: right;\\n  width: 55%;\\n}\\n.login-container[_ngcontent-%COMP%]   .roll[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 300px;\\n  left: 52px;\\n  background-color: #ffffff;\\n  width: 50%;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n  width: 500px;\\n  height: auto;\\n  padding: 20px;\\n  background-color: rgb(255, 255, 255);\\n  border-radius: 10px;\\n  position: absolute;\\n  bottom: 70px;\\n  right: 100px;\\n  box-shadow: 5px 5px 20px #0e0505;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\\n  margin-top: 18px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-right: 10px;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  border-color: rgb(199, 167, 167);\\n}\\n\\n.nav-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  color: black;\\n}\\n\\n.nav-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  font-weight: bold;\\n}\\n\\n.nav-item.active[_ngcontent-%COMP%] {\\n  font-weight: bolder;\\n  color: black;\\n}\\n\\n.red-text[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.black-text[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n\\n.help-block[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9sb2dpbi9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLDZEQUFBO0VBQ0Esa0JBQUE7QUFDRjtBQUFFO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsOENBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUFFSjtBQUFFO0VBQ0UsZUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxVQUFBO0FBRUo7QUFBRTtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7RUFDQSx5QkFBQTtFQUNBLFVBQUE7QUFFSjtBQUFFO0VBQ0UsWUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxnQ0FBQTtBQUVKO0FBREk7RUFDRSxnQkFBQTtBQUdOO0FBREk7RUFDRSxpQkFBQTtBQUdOO0FBQU07RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0FBRVI7O0FBSUE7RUFDRSxnQ0FBQTtBQURGOztBQUlBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7QUFERjs7QUFJQTtFQUNFLGlCQUFBO0FBREY7O0FBSUE7RUFDRSxtQkFBQTtFQUNBLFlBQUE7QUFERjs7QUFJQTtFQUNFLFVBQUE7QUFERjs7QUFJQTtFQUNFLFlBQUE7QUFERjs7QUFJQTtFQUNFLFVBQUE7QUFERiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmZmZmZiAwJSwgI2ZmZmZmZiAxMDAlKTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgLmxvZ28ge1xyXG4gICAgZm9udC1zaXplOiA3MHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LWZhbWlseTogXCJDb3VyaWVyIE5ld1wiLCBDb3VyaWVyLCBtb25vc3BhY2U7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMTBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogODBweDtcclxuICAgIHJpZ2h0OiA4MDBweDtcclxuICB9XHJcbiAgLmRlc2Mge1xyXG4gICAgZm9udC1zaXplOiAzNHB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFwiQWxhZGluXCIsIGN1cnNpdmU7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogNXB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyMDBweDtcclxuICAgIHJpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gIH1cclxuICAucm9sbCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDMwMHB4O1xyXG4gICAgbGVmdDogNTJweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gIH1cclxuICAubG9naW4tZm9ybSB7XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogNzBweDtcclxuICAgIHJpZ2h0OiAxMDBweDtcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMjBweCAjMGUwNTA1O1xyXG4gICAgLmZvcm0tZ3JvdXAge1xyXG4gICAgICBtYXJnaW4tdG9wOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgLmxhYmVsIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB9XHJcbiAgICAuYnRuLWNvbnRhaW5lciB7XHJcbiAgICAgIC5idG4ge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uZm9ybS1jb250cm9se1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDE5OSwgMTY3LCAxNjcpO1xyXG59XHJcblxyXG4ubmF2LWxpbmsgYSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLm5hdi1saW5rIGE6aG92ZXIge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ubmF2LWl0ZW0uYWN0aXZlIHtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnJlZC10ZXh0IHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uYmxhY2stdGV4dCB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uaGVscC1ibG9jayB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","SignUpComponent","constructor","router","authService","errorMessage","criteria","lowerCaseMet","upperCaseMet","digitMet","specialCharMet","lengthMet","matchConfirmPassword","control","value","signUp","get","passwordMismatch","checkPasswordCriteria","passwordControl","passwordValue","test","length","onSubmit","valid","email","username","password","subscribe","resData","navigate","error","reset","ngOnInit","required","minLength","maxLength","pattern","confirmpassword","setValidators","bind","i0","ɵɵdirectiveInject","i1","Router","i2","AuthService","selectors","decls","vars","template","SignUpComponent_Template","rf","ctx","styles"],"sources":["E:\\Web\\academy-project\\src\\app\\modules\\login\\sign-up\\sign-up.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  // Define the FormGroup and other properties\r\n  signUp!: FormGroup;\r\n  errorMessage = '';\r\n  criteria = {\r\n    lowerCaseMet: false,\r\n    upperCaseMet: false,\r\n    digitMet: false,\r\n    specialCharMet: false,\r\n    lengthMet: false,\r\n  };\r\n\r\n  // Custom validator to check if \"Confirm Password\" matches \"Password\"\r\n  matchConfirmPassword(control: FormControl): { [s: string]: boolean } {\r\n    if (control.value !== this.signUp.get('password').value) {\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Function to check password criteria\r\n  checkPasswordCriteria() {\r\n    const passwordControl = this.signUp.get('password');\r\n\r\n    if (passwordControl) {\r\n      const passwordValue = passwordControl.value;\r\n\r\n      this.criteria.lowerCaseMet = /[a-z]/.test(passwordValue);\r\n      this.criteria.upperCaseMet = /[A-Z]/.test(passwordValue);\r\n      this.criteria.digitMet = /\\d/.test(passwordValue);\r\n      this.criteria.specialCharMet = /[@#$%^&+=!]/.test(passwordValue);\r\n      this.criteria.lengthMet = passwordValue.length >= 8;\r\n    }\r\n  }\r\n\r\n  // Function to handle form submission\r\n  onSubmit() {\r\n    if (this.signUp.valid) {\r\n      const email = this.signUp.value.username;\r\n      const password = this.signUp.value.password;\r\n\r\n      this.authService.signUp(email, password).subscribe(\r\n        (resData) => {\r\n          // Successful signup\r\n          this.router.navigate(['/']);\r\n        },\r\n        (error) => {\r\n          // Handle signup error\r\n          this.errorMessage = error;\r\n          this.signUp.reset();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Initialize the form in ngOnInit\r\n  ngOnInit() {\r\n    this.signUp = new FormGroup({\r\n      username: new FormControl(null, [Validators.email, Validators.required, Validators.minLength(7), Validators.maxLength(37)]),\r\n      password: new FormControl(null, [Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@#$%^&+=!])[a-zA-Z0-9@#$%^&+=!]{8,}$'), Validators.required]),\r\n      confirmpassword: new FormControl(null)\r\n    });\r\n\r\n    // Set custom validators for the \"confirmpassword\" control\r\n    this.signUp.get('confirmpassword').setValidators([\r\n      Validators.required,\r\n      this.matchConfirmPassword.bind(this),\r\n    ]);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}