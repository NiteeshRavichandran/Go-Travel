{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.user = new BehaviorSubject(null);\n    this.admin = false;\n  }\n  signIn(email, password) {\n    return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyADtZEc4w86x68BlWNOnucEwg1HbBO0Ego', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    });\n  }\n  signUp(email, password) {\n    return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyADtZEc4w86x68BlWNOnucEwg1HbBO0Ego', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    });\n  }\n  itsAdmin() {\n    this.admin = true;\n  }\n  isAdmin() {\n    return this.admin;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","user","BehaviorSubject","admin","signIn","email","password","post","returnSecureToken","signUp","itsAdmin","isAdmin","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Web\\academy-project\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http'\r\n\r\n\r\ninterface AuthResponseData {\r\n  kind: string;\r\n  idToken: string;\r\n  email: string;\r\n  refreshToken: string;\r\n  expiresIn: string;\r\n  localId: string;\r\n  registered?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'  \r\n})\r\n\r\nexport class AuthService {\r\n  user = new BehaviorSubject<User>(null);\r\n  private tokenExpirationTimer: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  admin = false;\r\n\r\n  signIn(email: string, password: string){\r\n    return this.http.post <AuthResponseData>(\r\n      'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyADtZEc4w86x68BlWNOnucEwg1HbBO0Ego',\r\n      {\r\n        email: email, \r\n        password: password,\r\n        returnSecureToken: true\r\n      }\r\n    );\r\n  }\r\n\r\n  signUp(email: string, password: string){\r\n    return this.http.post <AuthResponseData>(\r\n      'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyADtZEc4w86x68BlWNOnucEwg1HbBO0Ego',\r\n      {\r\n        email: email, \r\n        password: password,\r\n        returnSecureToken: true\r\n      }\r\n    );\r\n  }\r\n  \r\n  itsAdmin(){\r\n    this.admin = true;\r\n  }\r\n\r\n  isAdmin(){\r\n    return this.admin;\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;;AAkBA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,IAAI,GAAG,IAAIC,eAAe,CAAO,IAAI,CAAC;IAItC,KAAAC,KAAK,GAAG,KAAK;EAF2B;EAIxCC,MAAMA,CAACC,KAAa,EAAEC,QAAgB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CACnB,mHAAmH,EACnH;MACEF,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBE,iBAAiB,EAAE;KACpB,CACF;EACH;EAEAC,MAAMA,CAACJ,KAAa,EAAEC,QAAgB;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CACnB,uGAAuG,EACvG;MACEF,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBE,iBAAiB,EAAE;KACpB,CACF;EACH;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACP,KAAK,GAAG,IAAI;EACnB;EAEAQ,OAAOA,CAAA;IACL,OAAO,IAAI,CAACR,KAAK;EACnB;;SAnCWL,WAAW;;mBAAXA,MAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXjB,MAAW;EAAAkB,OAAA,EAAXlB,MAAW,CAAAmB,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}