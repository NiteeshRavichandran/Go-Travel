{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../booking.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../seat.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../auth.service\";\nimport * as i7 from \"@angular/common\";\nfunction BookTicketsComponent_form_10_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1, \"Please Enter a Valid Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BookTicketsComponent_form_10_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1, \"Please select age between 5 to 125.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BookTicketsComponent_form_10_button_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const form_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"disabled\", !form_r1.valid);\n  }\n}\nfunction BookTicketsComponent_form_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function BookTicketsComponent_form_10_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"label\", 11);\n    i0.ɵɵtext(5, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 12);\n    i0.ɵɵtemplate(7, BookTicketsComponent_form_10_span_7_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 10)(9, \"label\", 11);\n    i0.ɵɵtext(10, \"Age:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 14);\n    i0.ɵɵtemplate(12, BookTicketsComponent_form_10_span_12_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\");\n    i0.ɵɵtext(15, \"Gender:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"div\", 15);\n    i0.ɵɵelement(18, \"input\", 16);\n    i0.ɵɵelementStart(19, \"label\", 17);\n    i0.ɵɵtext(20, \"Male\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 15);\n    i0.ɵɵelement(22, \"input\", 18);\n    i0.ɵɵelementStart(23, \"label\", 17);\n    i0.ɵɵtext(24, \"Female\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(25, BookTicketsComponent_form_10_button_25_Template, 2, 1, \"button\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const form_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_4_0;\n    let tmp_7_0;\n    i0.ɵɵproperty(\"formGroup\", form_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Passenger for \", ctx_r0.selectedSeats[i_r2].name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"passengerName\", i_r2, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"passengerName\" + i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_4_0 = form_r1.get(\"passengerName\")) == null ? null : tmp_4_0.valid) && ((tmp_4_0 = form_r1.get(\"passengerName\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"passengerAge\", i_r2, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", \"passengerAge\" + i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_7_0 = form_r1.get(\"passengerAge\")) == null ? null : tmp_7_0.valid) && ((tmp_7_0 = form_r1.get(\"passengerAge\")) == null ? null : tmp_7_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"id\", \"male\" + i_r2)(\"disabled\", ctx_r0.bookingForms[i_r2].get(\"passengerGender\").disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"male\" + i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", \"female\" + i_r2)(\"disabled\", ctx_r0.bookingForms[i_r2].get(\"passengerGender\").disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"female\" + i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r2 === ctx_r0.bookingForms.length - 1);\n  }\n}\nexport let BookTicketsComponent = /*#__PURE__*/(() => {\n  var _class;\n  class BookTicketsComponent {\n    constructor(bookingService, fb, http, seatService, router, authService) {\n      this.bookingService = bookingService;\n      this.fb = fb;\n      this.http = http;\n      this.seatService = seatService;\n      this.router = router;\n      this.authService = authService;\n      this.selectedSeats = [];\n      this.bookingForms = [];\n    }\n    ngOnInit() {\n      // Get the selected seats data directly from the service\n      this.selectedSeats = this.bookingService.getSelectedSeatsData();\n      this.initializeForms();\n    }\n    initializeForms() {\n      this.bookingForms = [];\n      function nameValidator(control) {\n        const name = control.value;\n        if (!name || name.length < 3) {\n          return {\n            'minLength': true\n          };\n        }\n        if (!/^[a-zA-Z\\s]*$/.test(name)) {\n          return {\n            'invalidChars': true\n          };\n        }\n        return null;\n      }\n      this.selectedSeats.forEach(seat => {\n        const isLadiesSeat = seat.seatStatus === 'ladiesSelected';\n        const form = this.fb.group({\n          passengerName: [seat.passengerName || '', [Validators.required, nameValidator]],\n          passengerAge: [seat.passengerAge || '', [Validators.required, Validators.min(5), Validators.max(125)]],\n          passengerGender: [{\n            value: 'female' || '',\n            disabled: isLadiesSeat\n          }, Validators.required]\n        });\n        this.bookingForms.push(form);\n      });\n    }\n    logout() {\n      this.authService.logout();\n    }\n    onSubmit() {\n      if (this.bookingForms.every(form => form.valid)) {\n        const passengerDataArray = this.bookingForms.map((form, index) => ({\n          seatName: this.selectedSeats[index].name,\n          seatPrice: this.selectedSeats[index].seatPrice,\n          passengerData: form.value\n        }));\n        // Send passengerDataArray to the server or perform any other required actions\n        // console.log(this.bookingForms);  \n        this.bookingService.confirmSeats(passengerDataArray);\n        this.router.navigate(['/summary']);\n      }\n    }\n  }\n  _class = BookTicketsComponent;\n  _class.ɵfac = function BookTicketsComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.SeatService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.AuthService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-book-tickets\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-dark\", \"bg-primary\", \"navbar-expand\"], [1, \"navbar-nav\"], [\"routerLinkActive\", \"active\", 1, \"nav-item\"], [\"routerLink\", \"/user\", 1, \"nav-link\"], [1, \"nav-link\", 3, \"click\"], [1, \"login-container\"], [1, \"container\", \"mt-4\", \"border\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"nxt-grp\"], [1, \"form-group\"], [3, \"for\"], [\"type\", \"text\", \"formControlName\", \"passengerName\", 1, \"form-control\", 3, \"id\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"type\", \"number\", \"formControlName\", \"passengerAge\", 1, \"form-control\", 3, \"id\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"value\", \"male\", \"formControlName\", \"passengerGender\", 1, \"form-check-input\", 3, \"id\", \"disabled\"], [1, \"form-check-label\", 3, \"for\"], [\"type\", \"radio\", \"value\", \"female\", \"formControlName\", \"passengerGender\", 1, \"form-check-input\", 3, \"id\", \"disabled\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 3, \"disabled\", 4, \"ngIf\"], [1, \"help-block\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function BookTicketsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1)(2, \"li\", 2)(3, \"a\", 3);\n        i0.ɵɵtext(4, \"User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"li\", 2)(6, \"a\", 4);\n        i0.ɵɵlistener(\"click\", function BookTicketsComponent_Template_a_click_6_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(7, \"Logout\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6);\n        i0.ɵɵtemplate(10, BookTicketsComponent_form_10_Template, 26, 15, \"form\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.bookingForms);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i5.RouterLink, i5.RouterLinkActive, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\".login-container[_ngcontent-%COMP%]{width:100%;height:100vh;background:linear-gradient(135deg,#ffffff 0%,#ffffff 100%);position:relative}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{width:500px;height:auto;padding:20px;background-color:#fff;border-radius:10px;position:absolute;top:100px;left:100px;box-shadow:5px 5px 20px #383838}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{margin-top:18px}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{font-weight:700}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{margin-top:30px;margin-right:10px}.nxt-grp[_ngcontent-%COMP%]{padding:20px}.navbar-nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]{color:#fff}.navbar-nav[_ngcontent-%COMP%]   .nav-item[_ngcontent-%COMP%]   .nav-link[_ngcontent-%COMP%]:hover{font-weight:700}.nav-item.active[_ngcontent-%COMP%]{font-weight:bolder}\"]\n  });\n  return BookTicketsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}