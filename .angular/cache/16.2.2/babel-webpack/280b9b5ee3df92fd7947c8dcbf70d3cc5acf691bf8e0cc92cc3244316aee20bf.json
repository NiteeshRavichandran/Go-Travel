{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminComponent_div_0_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Please Enter a valid UserName!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_div_0_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Please Enter a valid Password!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 1);\n    i0.ɵɵlistener(\"submit\", function AdminComponent_div_0_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 2)(3, \"nav\", 3)(4, \"ul\", 4)(5, \"li\", 5)(6, \"a\", 6);\n    i0.ɵɵtext(7, \"Login\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"li\", 5)(9, \"a\", 6);\n    i0.ɵɵtext(10, \"Sign Up\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"li\", 5)(12, \"a\", 7);\n    i0.ɵɵtext(13, \"Admin\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 9);\n    i0.ɵɵtext(16, \"Admin Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 10);\n    i0.ɵɵtemplate(18, AdminComponent_div_0_span_18_Template, 2, 0, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 8)(20, \"label\", 12);\n    i0.ɵɵtext(21, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 13);\n    i0.ɵɵtemplate(23, AdminComponent_div_0_span_23_Template, 2, 0, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n    i0.ɵɵtext(26, \"Login\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.adminLogin);\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n  }\n}\nexport class AdminComponent {\n  ngOnInit() {\n    this.adminLogin = new FormGroup({\n      username: new FormControl(null, [Validators.minLength(9), Validators.required]),\n      password: new FormControl(null, [Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=!])(?=.*[a-zA-Z0-9@#$%^&+=!]).{8,}'), Validators.required])\n    });\n  }\n}\n_class = AdminComponent;\n_class.ɵfac = function AdminComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [1, \"login-form\"], [1, \"navbar\", \"navbar-expand\", \"navbar-light\", \"bg-light\"], [1, \"navbar-nav\"], [1, \"nav-item\"], [1, \"nav-link\"], [\"routerLink\", \"/signup\", 1, \"nav-link\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn-container\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"help-block\"]],\n  template: function AdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AdminComponent_div_0_Template, 27, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.user === \"admin\");\n    }\n  },\n  dependencies: [i1.NgIf, i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminComponent_div_0_Template_form_submit_1_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵtemplate","AdminComponent_div_0_span_18_Template","AdminComponent_div_0_span_23_Template","ɵɵadvance","ɵɵproperty","ctx_r0","adminLogin","tmp_1_0","loginForm","get","valid","touched","tmp_2_0","AdminComponent","ngOnInit","username","minLength","required","password","pattern","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","AdminComponent_div_0_Template","user"],"sources":["E:\\Web\\Angular\\academy-project\\src\\app\\admin\\admin.component.ts","E:\\Web\\Angular\\academy-project\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n  adminLogin!: FormGroup;\n\n  ngOnInit(){\n  this.adminLogin = new FormGroup({\n    username: new FormControl(null,[Validators.minLength(9),Validators.required]),\n    password: new FormControl(null,[Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$%^&+=!])(?=.*[a-zA-Z0-9@#$%^&+=!]).{8,}'),Validators.required])\n  });\n}\n\n\n}\n","<div *ngIf=\"user === 'admin'\">\n  <form [formGroup]=\"adminLogin\" (submit)=\"onSubmit()\">\n    <div class=\"login-form\">\n      <nav class=\"navbar navbar-expand navbar-light bg-light\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" >Login</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" >Sign Up</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\">Admin</a>\n          </li>\n        </ul>\n      </nav>\n      <div class=\"form-group\">\n        <label for=\"username\">Admin Name</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          formControlName=\"username\"\n          class=\"form-control\"\n        />\n        <span\n          *ngIf=\"\n            !loginForm.get('username')?.valid &&\n            loginForm.get('username')?.touched\n          \"\n          class=\"help-block\"\n          >Please Enter a valid UserName!</span\n        >\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          formControlName=\"password\"\n          class=\"form-control\"\n        />\n        <span\n          *ngIf=\"\n            !loginForm.get('password')?.valid &&\n            loginForm.get('password')?.touched\n          \"\n          class=\"help-block\"\n          >Please Enter a valid Password!</span\n        >\n      </div>\n      <div class=\"btn-container\">\n        <button class=\"btn btn-dark\" type=\"submit\">Login</button>\n        <!-- <span \n     *ngIf=\"!loginForm?.valid && loginForm?.touched\"\n     class=\"help-block\">Please Enter valid Credentials!</span> -->\n      </div>\n    </div>\n  </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}