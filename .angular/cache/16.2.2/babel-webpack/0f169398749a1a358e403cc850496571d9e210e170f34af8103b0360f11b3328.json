{"ast":null,"code":"var _class;\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/auth/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SignUpComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Please Enter a valid UserName!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Please enter a Valid Password. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Password does not meet the criteria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Please confirm your password.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"Passwords do not match.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"red-text\": a0,\n    \"black-text\": a1\n  };\n};\nexport class SignUpComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.criteria = {\n      lowerCaseMet: false,\n      upperCaseMet: false,\n      digitMet: false,\n      specialCharMet: false,\n      lengthMet: false\n    };\n  }\n  // Custom validator to check if \"Confirm Password\" matches \"Password\"\n  matchConfirmPassword(control) {\n    if (control.value !== this.signUp.get('password').value) {\n      return {\n        passwordMismatch: true\n      };\n    }\n    return null;\n  }\n  // Function to check password criteria\n  checkPasswordCriteria() {\n    const passwordControl = this.signUp.get('password');\n    if (passwordControl) {\n      const passwordValue = passwordControl.value;\n      this.criteria.lowerCaseMet = /[a-z]/.test(passwordValue);\n      this.criteria.upperCaseMet = /[A-Z]/.test(passwordValue);\n      this.criteria.digitMet = /\\d/.test(passwordValue);\n      this.criteria.specialCharMet = /[@#$%^&+=!]/.test(passwordValue);\n      this.criteria.lengthMet = passwordValue.length >= 8;\n    }\n  }\n  // Function to handle form submission\n  onSubmit() {\n    if (this.signUp.valid) {\n      const email = this.signUp.value.username;\n      const password = this.signUp.value.password;\n      this.authService.signUp(email, password).subscribe(resData => {\n        // Successful signup\n        this.router.navigate(['/']);\n      }, error => {\n        // Handle signup error\n        this.errorMessage = error;\n        this.signUp.reset();\n      });\n    }\n  }\n  // Initialize the form in ngOnInit\n  ngOnInit() {\n    this.signUp = new FormGroup({\n      username: new FormControl(null, [Validators.email, Validators.required, Validators.minLength(7), Validators.maxLength(37)]),\n      password: new FormControl(null, [Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@#$%^&+=!])[a-zA-Z0-9@#$%^&+=!]{8,}$'), Validators.required]),\n      confirmpassword: new FormControl(null)\n    });\n    // Set custom validators for the \"confirmpassword\" control\n    this.signUp.get('confirmpassword').setValidators([Validators.required, this.matchConfirmPassword.bind(this)]);\n  }\n}\n_class = SignUpComponent;\n_class.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-sign-up\"]],\n  decls: 38,\n  vars: 27,\n  consts: [[1, \"login-container\"], [1, \"tit-bus\"], [\"src\", \"../assets/bus-white.jpg\", \"alt\", \"bus\", 1, \"roll\"], [1, \"logo\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter your email\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your Password\", 1, \"form-control\", 3, \"input\"], [1, \"help-block\", 3, \"ngClass\"], [\"for\", \"confirmpassword\"], [\"type\", \"password\", \"id\", \"confirmpassword\", \"placeholder\", \"Confirm Password\", \"formControlName\", \"confirmpassword\", 1, \"form-control\"], [1, \"btn-container\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"help-block\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4, \"Go Travel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function SignUpComponent_Template_form_submit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵtemplate(11, SignUpComponent_span_11_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"input\", function SignUpComponent_Template_input_input_15_listener() {\n        return ctx.checkPasswordCriteria();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"span\", 11);\n      i0.ɵɵtext(17, \" (a-z) | \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"span\", 11);\n      i0.ɵɵtext(19, \" (A-Z) | \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"span\", 11);\n      i0.ɵɵtext(21, \" (0-9) | \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"span\", 11);\n      i0.ɵɵtext(23, \" (@#$%^&+=!) | \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"span\", 11);\n      i0.ɵɵtext(25, \" 8 chars | \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, SignUpComponent_span_26_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(27, SignUpComponent_span_27_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 5)(29, \"label\", 12);\n      i0.ɵɵtext(30, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 13);\n      i0.ɵɵtemplate(32, SignUpComponent_span_32_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(33, SignUpComponent_span_33_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(34, SignUpComponent_span_34_Template, 2, 1, \"span\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 14)(36, \"button\", 15);\n      i0.ɵɵtext(37, \"Signup\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_7_0;\n      let tmp_8_0;\n      let tmp_9_0;\n      let tmp_10_0;\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.signUp);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.signUp.get(\"username\")) == null ? null : tmp_1_0.hasError(\"email\")) && ((tmp_1_0 = ctx.signUp.get(\"username\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c0, !ctx.criteria.lowerCaseMet, ctx.criteria.lowerCaseMet));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(15, _c0, !ctx.criteria.upperCaseMet, ctx.criteria.upperCaseMet));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c0, !ctx.criteria.digitMet, ctx.criteria.digitMet));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c0, !ctx.criteria.specialCharMet, ctx.criteria.specialCharMet));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(24, _c0, !ctx.criteria.lengthMet, ctx.criteria.lengthMet));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.signUp.get(\"password\")) == null ? null : tmp_7_0.hasError(\"required\")) && ((tmp_7_0 = ctx.signUp.get(\"password\")) == null ? null : tmp_7_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.signUp.get(\"password\")) == null ? null : tmp_8_0.hasError(\"pattern\")) && ((tmp_8_0 = ctx.signUp.get(\"password\")) == null ? null : tmp_8_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.signUp.get(\"confirmpassword\")) == null ? null : tmp_9_0.hasError(\"required\")) && ((tmp_9_0 = ctx.signUp.get(\"confirmpassword\")) == null ? null : tmp_9_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.signUp.get(\"confirmpassword\")) == null ? null : tmp_10_0.hasError(\"passwordMismatch\")) && ((tmp_10_0 = ctx.signUp.get(\"confirmpassword\")) == null ? null : tmp_10_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100vh;\\n  background: linear-gradient(135deg, #ffffff 0%, #ffffff 100%);\\n  position: relative;\\n}\\n.login-container[_ngcontent-%COMP%]   .logo[_ngcontent-%COMP%] {\\n  font-size: 70px;\\n  font-weight: bold;\\n  font-family: \\\"Courier New\\\", Courier, monospace;\\n  letter-spacing: 10px;\\n  position: absolute;\\n  top: 80px;\\n  right: 800px;\\n}\\n.login-container[_ngcontent-%COMP%]   .desc[_ngcontent-%COMP%] {\\n  font-size: 34px;\\n  font-family: \\\"Aladin\\\", cursive;\\n  letter-spacing: 5px;\\n  position: absolute;\\n  top: 200px;\\n  right: 50px;\\n  text-align: right;\\n  width: 55%;\\n}\\n.login-container[_ngcontent-%COMP%]   .roll[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 300px;\\n  left: 52px;\\n  background-color: #ffffff;\\n  width: 50%;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n  width: 500px;\\n  height: auto;\\n  padding: 20px;\\n  background-color: rgb(255, 255, 255);\\n  border-radius: 10px;\\n  position: absolute;\\n  bottom: 70px;\\n  right: 100px;\\n  box-shadow: 5px 5px 20px #0e0505;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\\n  margin-top: 18px;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-right: 10px;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  border-color: rgb(199, 167, 167);\\n}\\n\\n.nav-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  color: black;\\n}\\n\\n.nav-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  font-weight: bold;\\n}\\n\\n.nav-item.active[_ngcontent-%COMP%] {\\n  font-weight: bolder;\\n  color: black;\\n}\\n\\n.red-text[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.black-text[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n\\n.help-block[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9sb2dpbi9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLDZEQUFBO0VBQ0Esa0JBQUE7QUFDRjtBQUFFO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsOENBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUFFSjtBQUFFO0VBQ0UsZUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxVQUFBO0FBRUo7QUFBRTtFQUNFLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7RUFDQSx5QkFBQTtFQUNBLFVBQUE7QUFFSjtBQUFFO0VBQ0UsWUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxnQ0FBQTtBQUVKO0FBREk7RUFDRSxnQkFBQTtBQUdOO0FBREk7RUFDRSxpQkFBQTtBQUdOO0FBQU07RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0FBRVI7O0FBSUE7RUFDRSxnQ0FBQTtBQURGOztBQUlBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7QUFERjs7QUFJQTtFQUNFLGlCQUFBO0FBREY7O0FBSUE7RUFDRSxtQkFBQTtFQUNBLFlBQUE7QUFERjs7QUFJQTtFQUNFLFVBQUE7QUFERjs7QUFJQTtFQUNFLFlBQUE7QUFERjs7QUFJQTtFQUNFLFVBQUE7QUFERiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1jb250YWluZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmZmZmZiAwJSwgI2ZmZmZmZiAxMDAlKTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgLmxvZ28ge1xyXG4gICAgZm9udC1zaXplOiA3MHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LWZhbWlseTogXCJDb3VyaWVyIE5ld1wiLCBDb3VyaWVyLCBtb25vc3BhY2U7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMTBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogODBweDtcclxuICAgIHJpZ2h0OiA4MDBweDtcclxuICB9XHJcbiAgLmRlc2Mge1xyXG4gICAgZm9udC1zaXplOiAzNHB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFwiQWxhZGluXCIsIGN1cnNpdmU7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogNXB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAyMDBweDtcclxuICAgIHJpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gIH1cclxuICAucm9sbCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDMwMHB4O1xyXG4gICAgbGVmdDogNTJweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gIH1cclxuICAubG9naW4tZm9ybSB7XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogNzBweDtcclxuICAgIHJpZ2h0OiAxMDBweDtcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMjBweCAjMGUwNTA1O1xyXG4gICAgLmZvcm0tZ3JvdXAge1xyXG4gICAgICBtYXJnaW4tdG9wOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgLmxhYmVsIHtcclxuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB9XHJcbiAgICAuYnRuLWNvbnRhaW5lciB7XHJcbiAgICAgIC5idG4ge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uZm9ybS1jb250cm9se1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDE5OSwgMTY3LCAxNjcpO1xyXG59XHJcblxyXG4ubmF2LWxpbmsgYSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLm5hdi1saW5rIGE6aG92ZXIge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ubmF2LWl0ZW0uYWN0aXZlIHtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLnJlZC10ZXh0IHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uYmxhY2stdGV4dCB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uaGVscC1ibG9jayB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r5","errorMessage","SignUpComponent","constructor","router","authService","criteria","lowerCaseMet","upperCaseMet","digitMet","specialCharMet","lengthMet","matchConfirmPassword","control","value","signUp","get","passwordMismatch","checkPasswordCriteria","passwordControl","passwordValue","test","length","onSubmit","valid","email","username","password","subscribe","resData","navigate","error","reset","ngOnInit","required","minLength","maxLength","pattern","confirmpassword","setValidators","bind","ɵɵdirectiveInject","i1","Router","i2","AuthService","selectors","decls","vars","consts","template","SignUpComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","SignUpComponent_Template_form_submit_6_listener","ɵɵtemplate","SignUpComponent_span_11_Template","SignUpComponent_Template_input_input_15_listener","SignUpComponent_span_26_Template","SignUpComponent_span_27_Template","SignUpComponent_span_32_Template","SignUpComponent_span_33_Template","SignUpComponent_span_34_Template","ɵɵproperty","tmp_1_0","hasError","touched","ɵɵpureFunction2","_c0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0"],"sources":["E:\\Web\\academy-project\\src\\app\\modules\\login\\sign-up\\sign-up.component.ts","E:\\Web\\academy-project\\src\\app\\modules\\login\\sign-up\\sign-up.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  // Define the FormGroup and other properties\r\n  signUp!: FormGroup;\r\n  errorMessage = '';\r\n  criteria = {\r\n    lowerCaseMet: false,\r\n    upperCaseMet: false,\r\n    digitMet: false,\r\n    specialCharMet: false,\r\n    lengthMet: false,\r\n  };\r\n\r\n  // Custom validator to check if \"Confirm Password\" matches \"Password\"\r\n  matchConfirmPassword(control: FormControl): { [s: string]: boolean } {\r\n    if (control.value !== this.signUp.get('password').value) {\r\n      return { passwordMismatch: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Function to check password criteria\r\n  checkPasswordCriteria() {\r\n    const passwordControl = this.signUp.get('password');\r\n\r\n    if (passwordControl) {\r\n      const passwordValue = passwordControl.value;\r\n\r\n      this.criteria.lowerCaseMet = /[a-z]/.test(passwordValue);\r\n      this.criteria.upperCaseMet = /[A-Z]/.test(passwordValue);\r\n      this.criteria.digitMet = /\\d/.test(passwordValue);\r\n      this.criteria.specialCharMet = /[@#$%^&+=!]/.test(passwordValue);\r\n      this.criteria.lengthMet = passwordValue.length >= 8;\r\n    }\r\n  }\r\n\r\n  // Function to handle form submission\r\n  onSubmit() {\r\n    if (this.signUp.valid) {\r\n      const email = this.signUp.value.username;\r\n      const password = this.signUp.value.password;\r\n\r\n      this.authService.signUp(email, password).subscribe(\r\n        (resData) => {\r\n          // Successful signup\r\n          this.router.navigate(['/']);\r\n        },\r\n        (error) => {\r\n          // Handle signup error\r\n          this.errorMessage = error;\r\n          this.signUp.reset();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Initialize the form in ngOnInit\r\n  ngOnInit() {\r\n    this.signUp = new FormGroup({\r\n      username: new FormControl(null, [Validators.email, Validators.required, Validators.minLength(7), Validators.maxLength(37)]),\r\n      password: new FormControl(null, [Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@#$%^&+=!])[a-zA-Z0-9@#$%^&+=!]{8,}$'), Validators.required]),\r\n      confirmpassword: new FormControl(null)\r\n    });\r\n\r\n    // Set custom validators for the \"confirmpassword\" control\r\n    this.signUp.get('confirmpassword').setValidators([\r\n      Validators.required,\r\n      this.matchConfirmPassword.bind(this),\r\n    ]);\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"tit-bus\">\r\n  <img\r\n    class=\"roll\"\r\n    src=\"../assets/bus-white.jpg\"    alt=\"bus\"\r\n  />\r\n  <div class=\"logo\">Go Travel</div>\r\n</div>\r\n  <div>\r\n    <form [formGroup]=\"signUp\" (submit)=\"onSubmit()\">\r\n      <!-- ... navigation links ... -->\r\n      <!-- username -->\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          placeholder=\"Enter your email\"\r\n          formControlName=\"username\"\r\n          class=\"form-control\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            signUp.get('username')?.hasError('email') &&\r\n            signUp.get('username')?.touched\r\n          \"\r\n          class=\"help-block\"\r\n          >Please Enter a valid UserName!</span\r\n        >\r\n      </div>\r\n      <!-- password -->\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Enter your Password\"\r\n          class=\"form-control\"\r\n          (input)=\"checkPasswordCriteria()\"\r\n        />\r\n        <span class=\"help-block\" [ngClass]=\"{ 'red-text': !criteria.lowerCaseMet, 'black-text': criteria.lowerCaseMet }\">\r\n          (a-z) |\r\n        </span>\r\n        <span class=\"help-block\" [ngClass]=\"{ 'red-text': !criteria.upperCaseMet, 'black-text': criteria.upperCaseMet }\">\r\n          (A-Z) |\r\n        </span>\r\n        <span class=\"help-block\" [ngClass]=\"{ 'red-text': !criteria.digitMet, 'black-text': criteria.digitMet }\">\r\n          (0-9) |\r\n        </span>\r\n        <span class=\"help-block\" [ngClass]=\"{ 'red-text': !criteria.specialCharMet, 'black-text': criteria.specialCharMet }\">\r\n          (@#$%^&+=!) |\r\n        </span>\r\n        <span class=\"help-block\" [ngClass]=\"{ 'red-text': !criteria.lengthMet, 'black-text': criteria.lengthMet }\">\r\n          8 chars |\r\n        </span>\r\n        <span *ngIf=\"signUp.get('password')?.hasError('required') && signUp.get('password')?.touched\" class=\"help-block\">\r\n          Please enter a Valid Password.\r\n        </span>\r\n        <span *ngIf=\"signUp.get('password')?.hasError('pattern') && signUp.get('password')?.touched\" class=\"help-block\">\r\n          Password does not meet the criteria.\r\n        </span>\r\n        \r\n      </div>\r\n      <!-- confirm password -->\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmpassword\">Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"confirmpassword\"\r\n          placeholder=\"Confirm Password\"\r\n          formControlName=\"confirmpassword\"\r\n          class=\"form-control\"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            signUp.get('confirmpassword')?.hasError('required') &&\r\n            signUp.get('confirmpassword')?.touched\r\n          \"\r\n          class=\"help-block\"\r\n          >Please confirm your password.</span\r\n        >\r\n        <span\r\n          *ngIf=\"\r\n            signUp.get('confirmpassword')?.hasError('passwordMismatch') &&\r\n            signUp.get('confirmpassword')?.touched\r\n          \"\r\n          class=\"help-block\"\r\n          >Passwords do not match.</span\r\n        >\r\n        <span *ngIf=\"errorMessage\" class=\"help-block\">{{ errorMessage }}</span>\r\n      </div>\r\n      <div class=\"btn-container\">\r\n        <button class=\"btn btn-dark\" type=\"submit\">Signup</button>\r\n      </div>\r\n    </form>\r\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}